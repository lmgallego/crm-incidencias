"""M√≥dulo unificado de base de datos que usa SQLite o Supabase seg√∫n la configuraci√≥n"""

import logging
from config import DB_CONFIG

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Importar el m√≥dulo de base de datos apropiado
# CONFIGURADO PARA USAR √öNICAMENTE SUPABASE
logger.info("üîÑ Usando Supabase como base de datos (configuraci√≥n forzada)")
try:
    from .database_supabase import *
    DATABASE_TYPE = "supabase"
except ImportError as e:
    logger.error(f"‚ùå Error cr√≠tico: No se puede importar Supabase: {e}")
    logger.error("‚ùå La aplicaci√≥n est√° configurada para usar √∫nicamente Supabase")
    logger.error("‚ùå Verifique la configuraci√≥n de Supabase y las dependencias")
    raise ImportError("Supabase no est√° disponible y es requerido para esta configuraci√≥n")

logger.info(f"‚úÖ Base de datos configurada: {DATABASE_TYPE}")

# Funci√≥n para obtener el tipo de base de datos actual
def get_database_type():
    """Retorna el tipo de base de datos en uso"""
    return DATABASE_TYPE

# Funci√≥n para verificar el estado de la conexi√≥n
def check_database_connection():
    """Verifica si la conexi√≥n a la base de datos est√° funcionando"""
    try:
        from supabase_config import test_connection
        return test_connection()
    except Exception as e:
        logger.error(f"‚ùå Error de conexi√≥n a Supabase: {e}")
        return False

# Funci√≥n adicional para filtros del dashboard
def get_pending_incidents_by_coordinator(coordinator_id=None):
    """Obtiene incidencias pendientes filtradas por coordinador asignado"""
    from .database_supabase import get_pending_incidents_by_coordinator as get_pending_supabase
    return get_pending_supabase(coordinator_id)

def get_filtered_pending_incidents(coordinator_id=None, status=None, days=None):
    """Obtiene incidencias pendientes con filtros m√∫ltiples"""
    from .database_supabase import get_filtered_pending_incidents as get_filtered_supabase
    return get_filtered_supabase(coordinator_id, status, days)